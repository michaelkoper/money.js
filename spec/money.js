// Generated by CoffeeScript 1.3.3

describe("Money", function() {
  describe("#format", function() {
    it("returns the monetary value as a string", function() {
      var money;
      money = new Money(12345, 'EUR');
      expect(money.formatted()).toEqual("123,45 €");
      money = new Money(12345, 'USD');
      return expect(money.formatted()).toEqual("$123.45");
    });
    it("does not display a decimal when factor is 1", function() {
      var money;
      money = new Money(100, 'CLP');
      return expect(money.formatted()).toEqual("$100");
    });
    it("shows thousands", function() {
      var money;
      money = new Money(100000, 'EUR');
      return expect(money.formatted()).toEqual("1.000,00 €");
    });
    return describe(":no_cents option", function() {
      it("filters when value has no decimals", function() {
        var money;
        money = new Money(1000, 'EUR');
        return expect(money.formatted({
          no_cents: true
        })).toEqual("10 €");
      });
      return it("filters when value has decimals", function() {
        var money;
        money = new Money(1040, 'EUR');
        return expect(money.formatted({
          no_cents: true
        })).toEqual("10 €");
      });
    });
  });
  describe("#add", function() {
    return it("adds cents", function() {
      var money;
      money = new Money(1040, 'EUR');
      return expect(money.add(100).cents).toEqual(1140);
    });
  });
  describe("#subtract", function() {
    return it("subtract cents", function() {
      var money;
      money = new Money(1040, 'EUR');
      return expect(money.subtract(100).cents).toEqual(940);
    });
  });
  describe("#duplicate", function() {
    return it("duplicates a money object", function() {
      var money, newMoney;
      money = new Money(1040, 'EUR');
      newMoney = money.dup();
      return expect(money.cents).toEqual(newMoney.cents);
    });
  });
  describe("#multiply", function() {
    it("with factor of 2", function() {
      var money;
      money = new Money(1000, 'EUR');
      return expect(money.multiply(2).cents).toEqual(2000);
    });
    return it("with factor of 2.5", function() {
      var money;
      money = new Money(1000, 'EUR');
      return expect(money.multiply(2.5).cents).toEqual(2500);
    });
  });
  return describe("#divide", function() {
    it("with factor of 2", function() {
      var money;
      money = new Money(1000, 'EUR');
      return expect(money.divide(2).cents).toEqual(500);
    });
    it("with factor of 2.5", function() {
      var money;
      money = new Money(1000, 'EUR');
      return expect(money.divide(3).cents).toEqual(333);
    });
    return it("with factor of 250", function() {
      var money;
      money = new Money(1000, 'EUR');
      return expect(money.divide(250).cents).toEqual(4);
    });
  });
});
